/**
 * Angular Blocking Promise Manager
 * https://github.com/zero-degrees/angularjs-blocking-promise-manager
 *
 * @copyright 2017 Craig Russell
 * @license MIT
 */
!function(){"use strict";angular.module("BlockingPromiseManager",[]).factory("BlockingPromiseManager",["$q",function(e){function t(){Object.keys(n).forEach(function(e){n[e]=n[e].filter(function(e){return 1!=e.$$state.status})}),Object.keys(n).forEach(function(e){0===n[e].length&&(delete n[e],r[e].resolve(),delete r[e])}),0===Object.keys(n).length&&(r._master.resolve(),r._master=e.defer())}var r={_master:e.defer()},n={};return{count:function(e){return e=e?Array.isArray(e)?e:[e]:Object.keys(n),Object.keys(n).reduce(function(e,t){return e+n[t].length},0)},getMetaPromise:function(t){return t=t||"_master",void 0===r[t]?e.defer():r[t]},add:function(o,c){var u=Array.isArray(o)?o:[o];c=c||"_default",void 0===n[c]&&(n[c]=[],r[c]=e.defer()),u.map(function(e){e.then(function(){t()},function(){t()}),n[c].push(e)})}}}])}();