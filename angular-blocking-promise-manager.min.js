/**
 * Angular Blocking Promise Manager
 * https://github.com/zero-degrees/angularjs-blocking-promise-manager
 *
 * @copyright 2017 Craig Russell
 * @license MIT
 */
!function(){"use strict";angular.module("BlockingPromiseManager",[]).factory("BlockingPromiseManager",["$q",function(e){function r(){Object.keys(n).forEach(function(e){n[e]=n[e].filter(function(e){return void 0!==e.$$state.value}),0===n[e].length&&(delete n[e],t[e].resolve(),delete t[e])}),0===Object.keys(n).length&&(t._master.resolve(),t._master=e.defer())}var t={_master:e.defer()},n={};return{count:function(e){return r(),e=e?Array.isArray(e)?e:[e]:Object.keys(n),Object.keys(n).reduce(function(e,r){return e+n[r].length},0)},getMetaPromise:function(r){return r=r||"_master",void 0===t[r]?e.defer():t[r]},add:function(o,u){var a=Array.isArray(o)?o:[o];u=u||"_default",void 0===n[u]&&(n[u]=[],t[u]=e.defer()),a.map(function(e){e.then(function(){r()},function(){r()}),n[u].push(e)})}}}])}();