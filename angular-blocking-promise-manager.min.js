/**
 * Angular Blocking Promise Manager
 * https://github.com/zero-degrees/angularjs-blocking-promise-manager
 *
 * @copyright 2017 Craig Russell
 * @license MIT
 */
!function(){"use strict";angular.module("BlockingPromiseManager",[]).factory("BlockingPromiseManager",["$q",function(n){function e(){Object.keys(r).forEach(function(n){r[n]=r[n].filter(function(n){return 1!=n.$$state.status})}),Object.keys(r).forEach(function(n){0===r[n].length&&delete r[n]}),0===Object.keys(r).length&&(t.resolve(),t=n.defer())}var t=n.defer(),r={};return{count:function(n){return n?void 0===r[n]?0:r[n].length:Object.keys(r).reduce(function(n,e){return n+r[e].length},0)},getMetaPromise:function(){return t},add:function(n,t){var o=Array.isArray(n)?n:[n];t=t||"_default",r[t]=void 0===r[t]?[]:r[t],o.map(function(n){n.then(function(){e()},function(){e()}),r[t].push(n)})}}}])}();