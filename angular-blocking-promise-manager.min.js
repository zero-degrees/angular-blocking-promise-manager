/**
 * Angular Blocking Promise Manager
 * https://github.com/zero-degrees/angularjs-blocking-promise-manager
 *
 * @copyright 2017 Craig Russell
 * @license MIT
 */
!function(){"use strict";angular.module("BlockingPromiseManager",[]).factory("BlockingPromiseManager",["$q",function(e){function t(){Object.keys(r).forEach(function(e){r[e]=r[e].filter(function(e){return 1!=e.$$state.status})}),Object.keys(r).forEach(function(e){0===r[e].length&&(delete r[e],n[e].resolve(),delete n[e])}),0===Object.keys(r).length&&(n._master.resolve(),n._master=e.defer())}var n={_master:e.defer()},r={};return{count:function(e){return e?void 0===r[e]?0:r[e].length:Object.keys(r).reduce(function(e,t){return e+r[t].length},0)},getMetaPromise:function(t){return t=t||"_master",void 0===n[t]?e.defer():n[t]},add:function(o,u){var c=Array.isArray(o)?o:[o];u=u||"_default",void 0===r[u]&&(r[u]=[],n[u]=e.defer()),c.map(function(e){e.then(function(){t()},function(){t()}),r[u].push(e)})}}}])}();